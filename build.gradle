plugins {
    id 'groovy'
    id 'maven-publish'
    id 'jacoco'
    id 'nebula.optional-base' version '3.0.3'
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'maven'
    id 'signing'
    id 'pl.allegro.tech.build.axion-release' version '1.3.3'
}

scmVersion {
    tag {
        prefix = ''
    }
}

group 'net.zymen'
archivesBaseName = name
version scmVersion.version

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {

    compile group: 'org.springframework.boot', name: 'spring-boot-starter', version: '1.3.2.RELEASE'
    compile group: 'org.springframework.session', name: 'spring-session', version: '1.1.0.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '+'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.1-1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '1.3.2.RELEASE', optional

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.3.2.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.2.RELEASE'
    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.0-groovy-2.4'
    testCompile( 'com.github.tomakehurst:wiremock:+' ) {
        exclude group: 'org.mortbay.jetty' , module: 'servlet-api'
    }
}

configurations {
    all*.exclude group: 'org.mortbay.jetty', module: 'servlet-api'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourceJar
}

signing {
    if (project.ext.has('signArtifacts')) {
        sign configurations.archives
    }
}

ext {
    ossrhUsername = project.ext.has('ossrhUsername') ? project.ext.ossrhUsername : ''
    ossrhPassword = project.ext.has('ossrhPassword') ? project.ext.ossrhPassword : ''
}

//uploadArchives {
//    repositories {
//        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//            pom.project {
//                name 'Session Couchbase Spring Boot Starter'
//                packaging 'jar'
//                description 'Spring Boot starter for Couchbase backed HTTP session'
//                url 'https://github.com/mkopylec/session-couchbase-spring-boot-starter'
//                scm {
//                    connection 'scm:git:https://github.com/mkopylec/session-couchbase-spring-boot-starter.git'
//                    developerConnection 'scm:git:https://github.com/mkopylec/session-couchbase-spring-boot-starter.git'
//                    url 'https://github.com/mkopylec/session-couchbase-spring-boot-starter'
//                }
//                licenses {
//                    license {
//                        name 'The Apache License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'mkopylec'
//                        name 'Mariusz Kopylec'
//                        email 'mariusz.kopylec@o2.pl'
//                    }
//                }
//            }
//        }
//    }
//}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
